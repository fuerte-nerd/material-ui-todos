{"version":3,"sources":["comps/Head.js","comps/Todo.js","redux/actions.js","redux/types.js","comps/Todos.js","comps/AddTodo.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Head","rel","href","doneStyle","backgroundColor","connect","state","todos","props","thisTodo","filter","i","id","data","title","create_date","complete_date","done","ListItem","button","onClick","dispatch","type","payload","style","ListItemIcon","Checkbox","edge","checked","ListItemText","disableTypography","primary","Typography","variant","textDecoration","secondary","color","fontStyle","display","moment","format","ListItemSecondaryAction","IconButton","aria-label","Delete","List","Grid","container","spacing","length","map","item","xs","md","Fade","in","timeout","enter","Box","boxShadow","key","divider","textAlign","isOpen","isAddToDoOpen","useState","todoValue","updateTodoValue","handleClick","uniqId","Date","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","label","value","fullWidth","inputProps","maxlength","onKeyUp","e","onChange","target","DialogActions","Button","useEffect","localStorage","setItem","JSON","stringify","Fab","position","bottom","right","Container","initialState","getItem","parse","createStore","action","concat","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.947c45cf.chunk.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst Head = () => {\n  return (\n    <Helmet>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n      />\n    </Helmet>\n  );\n};\n\nexport default Head;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleDone, deleteTodo } from \"../redux/actions\";\n\nimport moment from \"moment\";\n\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  IconButton,\n  ListItemSecondaryAction,\n  Checkbox,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { Delete } from \"@material-ui/icons\";\n\nconst Todo = (props) => {\n  const thisTodo = props.todos.filter((i) => {\n    if (i.id === props.data.id) {\n      return i;\n    }\n    return null;\n  })[0];\n\n  const { id, title, create_date, complete_date, done } = thisTodo;\n\n  const handleDoneClick = () => {\n    props.dispatch(toggleDone(id));\n  };\n\n  const handleDeleteClick = () => {\n    props.dispatch(deleteTodo(id));\n  };\n\n  return (\n    <ListItem button onClick={handleDoneClick} style={done ? doneStyle : null}>\n      <ListItemIcon>\n        <Checkbox edge=\"start\" checked={done} />\n      </ListItemIcon>\n      <ListItemText\n        disableTypography\n        primary=<Typography\n          variant=\"body1\"\n          style={done ? { textDecoration: \"line-through\" } : null}\n        >\n          {title}\n        </Typography>\n        secondary=<Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n          style={{ fontStyle: \"italic\" }}\n        >\n          <span style={{ display: \"block\" }}>\n            CREATED:{` `}\n            {moment(create_date).format(\"D MMMM YYYY HH:mm\")}\n          </span>\n          <span style={{ display: \"block\" }}>\n            COMPLETED:{` `}\n            {done ? moment(complete_date).format(\"D MMMM YYYY HH:mm\") : \"?\"}\n          </span>\n        </Typography>\n      />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDeleteClick}>\n          <Delete />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nconst doneStyle = {\n  backgroundColor: \"silver\",\n};\n\nconst mapStateToProps = (state) => ({\n  todos: state.todos,\n});\n\nexport default connect(mapStateToProps)(Todo);\n","import {\n  TOGGLE_ADD_TODO_DIALOG,\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_DONE,\n} from \"./types\";\n\nexport const toggleAddTodoDialog = () => {\n  return {\n    type: TOGGLE_ADD_TODO_DIALOG,\n  };\n};\n\nexport const addTodo = (todo) => {\n  return {\n    type: ADD_TODO,\n    payload: todo,\n  };\n};\nexport const deleteTodo = (todo) => {\n  return {\n    type: DELETE_TODO,\n    payload: todo,\n  };\n};\n\nexport const toggleDone = (todo) => {\n  return {\n    type: TOGGLE_DONE,\n    payload: todo,\n  };\n};\n","export const ADD_TODO = \"ADD_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const TOGGLE_DONE = \"TOGGLE_DONE\";\nexport const TOGGLE_ADD_TODO_DIALOG = \"TOGGLE_ADD_TODO_DIALOG\";\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\n\nimport {\n  Fade,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\n\nconst Todos = (props) => {\n  return (\n    <List>\n      <Grid container spacing={2}>\n        {props.todos.length > 0 ? (\n          props.todos.map((i) => {\n            return (\n              <Grid item xs={12} md={6}>\n                <Fade in timeout={{ enter: 1000 }}>\n                  <Box boxShadow={3}>\n                    <Todo key={i.id} data={i} />\n                  </Box>\n                </Fade>\n              </Grid>\n            );\n          })\n        ) : (\n          <ListItem divider style={{ textAlign: \"center\" }}>\n            <ListItemText primary=\"You currently have nothing to do!  SURELY NOT? ;o)\" />\n          </ListItem>\n        )}\n      </Grid>\n    </List>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  todos: state.todos,\n});\n\nexport default connect(mapStateToProps)(Todos);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleAddTodoDialog, addTodo } from \"../redux/actions\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  Button,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport uniqId from \"uniqid\";\n\nconst AddTodo = (props) => {\n  const [todoValue, updateTodoValue] = useState(\"\");\n\n  const handleChange = (e) => {\n    updateTodoValue(e.target.value);\n  };\n\n  const listenForEnter = (e) => {\n    return e.key === \"Enter\" && props.isOpen ? handleClick() : null;\n  };\n\n  const handleClick = () => {\n    if (todoValue) {\n      props.dispatch(\n        addTodo({\n          id: uniqId(),\n          title: todoValue,\n          create_date: new Date(),\n          done: false,\n          complete_date: null,\n        })\n      );\n      updateTodoValue(\"\");\n      props.dispatch(toggleAddTodoDialog());\n    }\n  };\n\n  const handleClose = () => {\n    props.dispatch(toggleAddTodoDialog());\n  };\n  return (\n    <Dialog open={props.isOpen} onClose={handleClose}>\n      <DialogTitle>Add Todo</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To add a new 'Todo', enter a title in the field below and click 'ADD'.\n        </DialogContentText>\n        <TextField\n          autoFocus\n          id=\"title\"\n          label=\"Description\"\n          type=\"text\"\n          value={todoValue}\n          fullWidth\n          inputProps={{\n            maxlength: 25,\n          }}\n          onKeyUp={listenForEnter}\n          onChange={handleChange}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleClick}>\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isOpen: state.isAddToDoOpen,\n  todos: state.todos,\n});\nexport default connect(mapStateToProps)(AddTodo);\n","import React, { useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { toggleAddTodoDialog } from \"./redux/actions\";\n\nimport \"./App.css\";\n\nimport Head from \"./comps/Head\";\nimport Todos from \"./comps/Todos\";\nimport AddTodo from \"./comps/AddTodo\";\n\nimport { Container, Typography, Fab, Box } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction App(props) {\n  const toggle = () => {\n    props.dispatch(toggleAddTodoDialog());\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"daves_todo_app\", JSON.stringify(props.todos));\n  }, [props.todos]);\n\n  return (\n    <>\n      <Head />\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        style={{\n          position: \"fixed\",\n          bottom: \"3rem\",\n          right: \"3rem\",\n        }}\n        onClick={toggle}\n      >\n        <AddIcon />\n      </Fab>\n      <AddTodo />\n      <Container>\n        <Box style={{ textAlign: \"center\" }}>\n          <Typography variant=\"h1\">Todos</Typography>\n          <Typography variant=\"subtitle2\">\n            What have you got to do today?\n          </Typography>\n        </Box>\n        <Box>\n          <Todos />\n        </Box>\n      </Container>\n    </>\n  );\n}\nconst mapStateToProps = (state) => ({\n  todos: state.todos,\n});\nexport default connect(mapStateToProps)(App);\n","import {\n  TOGGLE_ADD_TODO_DIALOG,\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_DONE,\n} from \"./types\";\n\nconst getTodos = () => {\n  if (localStorage.getItem(\"daves_todo_app\")) {\n    return JSON.parse(localStorage.getItem(\"daves_todo_app\"));\n  } else {\n    return [];\n  }\n};\n\nconst initialState = {\n  todos: getTodos(),\n  isAddToDoOpen: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: state.todos.concat([action.payload]),\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter((i) => {\n          if (i.id !== action.payload) {\n            return i;\n          }\n          return null;\n        }),\n      };\n    case TOGGLE_DONE:\n      return {\n        ...state,\n        todos: state.todos.map((i) => {\n          if (i.id === action.payload) {\n            i.done = !i.done;\n            i.complete_date = i.done ? new Date() : null;\n          }\n          return i;\n        }),\n      };\n    case TOGGLE_ADD_TODO_DIALOG:\n      return {\n        ...state,\n        isAddToDoOpen: !state.isAddToDoOpen,\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nexport default createStore(reducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport store from \"./redux/store\";\n\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}